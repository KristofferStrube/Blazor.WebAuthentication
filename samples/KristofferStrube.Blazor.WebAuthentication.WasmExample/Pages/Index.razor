@page "/"
@using System.Security.Cryptography;
@inject CredentialsService CredentialsService;

<PageTitle>Blazor Web Authentication</PageTitle>

<h2>Blazor Web Authentication</h2>

@if (!isSupported)
{
    <p>The Web Authentication browser API is not supported in this browser. Try updating your browser/system or try another browser/device.</p>
    return;
}

<p>
    Here you can try to register some credentials and validate them.
    <br />
    <small>If you have registered some credentials for a username within 20 minutes then you can still validate it even after having refreshed this page as it is the server that remembers credentials.</small>
</p>

<label for="username">Username</label>
<input id="username" @bind=username />
<br />
<br />
<button class="btn btn-success" @onclick="CreateCredential">Register</button>

<br />
@if (publicKey is not null)
{
    <b>Registered a user! 🎊</b>
    <br/>
    <b>Public Key: </b> @string.Join(", ", publicKey.Select(b => $"{b:X2}"))
    <br />
}
@if (challenge is not null)
{
    <br />
    <b>Challenge: </b> @string.Join(", ", challenge.Select(b => $"{b:X2}"))
    <br />
}
<br />
<button class="btn btn-primary" @onclick="GetCredential">Validate Credentials</button>

@if (validated is { } success)
{
    <br />
    <br />
    <div class="rounded p-2 text-white @(success ? "bg-success": "bg-danger")">
        @(success ? "You logged in and validated your credentials" : errorMessage ?? "You were not successful in logging on.")
    </div>
}
else if (errorMessage is not null)
{
    <br />
    <br />
    <div class="rounded p-2 text-white bg-danger">@errorMessage</div>
}

